<Project Sdk="Microsoft.NET.Sdk">

	<PropertyGroup>
		<TargetFrameworks>net9.0-android;net9.0-ios</TargetFrameworks>
		<TargetFrameworks Condition="$([MSBuild]::IsOSPlatform('windows'))">$(TargetFrameworks);net9.0-windows10.0.19041.0</TargetFrameworks>
		<!-- Uncomment to also build the tizen app. You will need to install tizen by following this: https://github.com/Samsung/Tizen.NET -->
		<!-- <TargetFrameworks>$(TargetFrameworks);net9.0-tizen</TargetFrameworks> -->
		<UseMaui>true</UseMaui>
		<SingleProject>true</SingleProject>
		<ImplicitUsings>enable</ImplicitUsings>
		<Nullable>enable</Nullable>

		<SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'ios'">15.0</SupportedOSPlatformVersion>
		<SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'maccatalyst'">15.0</SupportedOSPlatformVersion>
		<SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'android'">21.0</SupportedOSPlatformVersion>
		<SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'windows'">10.0.17763.0</SupportedOSPlatformVersion>
		<TargetPlatformMinVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'windows'">10.0.17763.0</TargetPlatformMinVersion>
		<SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'tizen'">6.5</SupportedOSPlatformVersion>

    <PackageOutputPath>C:\Users\logik\Dropbox\Nugets</PackageOutputPath>
    <!-- Set export directory -->
  </PropertyGroup>

  <PropertyGroup>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <PackageId>MarketAlly.ViewEngine</PackageId>
    <Version>1.1.1</Version>
    <Authors>David H Friedel Jr</Authors>
    <Company>MarketAlly</Company>
    <Product>MarketAlly.Maui.ViewEngine</Product>

    <Title>Advanced .NET MAUI WebView with Content Monitoring</Title>
    <Description>
      Enhanced .NET MAUI WebView control with advanced browser capabilities, real-time content monitoring, and PDF processing. Features include custom user-agent configuration, debounced DOM change detection, on-demand link extraction, ad detection, PDF handling, cookie management, and seamless cross-platform support for Android, iOS, and Windows.

      Key Features:
      - Custom User-Agent and browser detection bypass
      - Real-time content monitoring with intelligent debouncing (1-second delay)
      - On-demand route extraction - Zero performance impact by default (NEW in v1.1.1)
      - Automatic PDF download handling and text extraction
      - Intelligent ad detection and filtering with scoring system (NEW in v1.1.1)
      - Link extraction with Routes (all page links) and BodyRoutes (content-only links)
      - Configurable route limits (MaxRoutes) for performance optimization (NEW in v1.1.1)
      - Full cookie and storage support
      - WebRTC and WebGL compatibility
      - Cross-platform implementation (Android, iOS, Windows)
      - Event-based content updates via PageDataChanged event
      - JavaScript injection support
      - Production-ready with optimized performance

      Perfect for applications requiring advanced web content interaction, monitoring, and processing.
    </Description>

    <Copyright>Copyright Â© 2025 MarketAlly</Copyright>
    <PackageIcon>icon.png</PackageIcon>
    <PackageReadmeFile>README.md</PackageReadmeFile>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <PackageProjectUrl>https://github.com/MarketAlly/MarketAlly.ViewEngine</PackageProjectUrl>
    <RepositoryUrl>https://github.com/MarketAlly/MarketAlly.ViewEngine</RepositoryUrl>
    <RepositoryType>git</RepositoryType>

    <PackageTags>webview dotnet-maui maui custom-control browser pdf-handling content-monitoring dom-monitoring user-agent cookie-management webrtc webgl android ios windows cross-platform web-scraping content-extraction debouncing link-extraction ad-detection on-demand performance-optimization</PackageTags>

    <PackageReleaseNotes>
      Version 1.1.1 (Performance Optimization Release):
      - BREAKING CHANGE: Routes are NOT extracted by default (EnableRouteExtraction=false) - ZERO performance impact on PageDataChanged
      - NEW: ExtractRoutesAsync() method for on-demand route extraction when needed
      - NEW: EnableRouteExtraction property - set to true for automatic extraction (original v1.1.0 behavior)
      - NEW: MaxRoutes property limits route processing (default: 100, prevents lockups on pages with 1000+ links)
      - NEW: Intelligent ad detection with scoring system (rel=sponsored, ad domains, tracking params, CSS classes)
      - NEW: RouteInfo.IsPotentialAd and AdReason properties for filtering advertisements
      - NEW: Async ad detection runs in background batches without blocking UI
      - NEW: Raw link data caching for instant on-demand extraction
      - PERFORMANCE: Eliminated route processing lockups on link-heavy pages
      - PERFORMANCE: Batched async processing with UI thread yielding
      - OPTIMIZATION: Memory management - cached data freed after ad processing
      - Enhanced RouteInfo with Rank, Occurrences, AllTexts, and ad detection properties
      - Fully backward compatible - existing apps continue to work (routes will be empty by default)

      Migration Guide:
      - To restore v1.1.0 behavior: Set EnableRouteExtraction="true" on your WebView
      - Recommended: Keep EnableRouteExtraction="false" and call ExtractRoutesAsync() on-demand for best performance

      Previous versions:
      - 1.1.0: Stable production release with debouncing and enhanced link extraction
      - 1.0.x: Initial releases with content monitoring, PDF handling, and custom user-agent support
    </PackageReleaseNotes>

    <!-- Required dependencies -->
    <DependencyGroup>
      <Dependency Id="Microsoft.Maui.Controls" Version="8.0.3" />
      <Dependency Id="itext7" Version="8.0.2" />
    </DependencyGroup>
  </PropertyGroup>

  <ItemGroup>
    <MauiIcon Include="icon.png" />
  </ItemGroup>

	<ItemGroup>
		<PackageReference Include="Microsoft.Maui.Controls" Version="9.0.40" />
    <PackageReference Include="itext7" Version="9.1.0" />
	</ItemGroup>

	<ItemGroup>
    <None Include="icon.png">
      <Pack>true</Pack>
      <PackagePath>\</PackagePath>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <Visible>true</Visible>
    </None>
    <!-- Configure README -->
    <None Include="README.md" Pack="true" PackagePath="\" />
	</ItemGroup>

</Project>
